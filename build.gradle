buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'


configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

version = '0.0.1'
group = 'com.github.RocketPartners'

repositories { 
   mavenLocal()
   mavenCentral() 
   maven { url 'https://jitpack.io' }
}


sourceCompatibility = 1.8

dependencies {

	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-jdbc'
	compile 'org.springframework.boot:spring-boot-starter-test'
	compile 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.6.0'
	
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.34'
	
	if (gradle.ext.liftck_snooze['addRocketSnoozeProjectToClasspath']) {
    		compile findProject(":rckt_snooze")
    }
    else {
   		compile("com.github.RocketPartners:rckt_snooze:release-0.3.x-SNAPSHOT") { changing = true }
    }
}



/************************************************************
 * Ensuring source directories are created if they do not 
 * already exist when running 'gradle eclipse'
 */
eclipse {
    classpath {
        file {
            tasks.eclipse.dependsOn("create-dirs")
        }
    }
}



/************************************************************
 * This task should be used when creating a new project as
 * it will create all source and resource directories.  This
 * task is automatically executed during the 
 * 'gradle eclipse' command.
 */
task "create-dirs" {
    doLast {
       sourceSets*.java.srcDirs*.each { it.mkdirs() }
       sourceSets*.resources.srcDirs*.each { it.mkdirs() }
   }
}

  
